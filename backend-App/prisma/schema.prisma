generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  idAccount     Int      @id @default(autoincrement())
  nameAccount   String   @unique
  email         String   @unique
  password      String
  createDate    DateTime @default(now())
  updateData    DateTime @default(now())
  statusAccount Boolean  @default(true)
  roleAccount   Int
  idPerson      Int
  person        Person   @relation(fields: [idPerson], references: [idPerson])
  role          Role     @relation(fields: [roleAccount], references: [idRole])
}

model Person {
  idPerson           Int                @id @default(autoincrement())
  names              String
  lastNames          String
  createDate         DateTime           @default(now())
  updateDate         DateTime           @default(now())
  idIdentification   Int
  numIdentification  String             @unique
  account            Account[]
  phone              Int                @unique
  typeIdentification TypeIdentification @relation(fields: [idIdentification], references: [idTypeIdentification])
}

model TypeIdentification {
  idTypeIdentification     Int      @id @default(autoincrement())
  nameIdentification       String   @unique
  createDate               DateTime @default(now())
  updateDate               DateTime @default(now())
  statusTypeIdentification Boolean  @default(true)
  person                   Person[]
}

model Role {
  idRole             Int                  @id @default(autoincrement())
  nameRole           String               @unique
  createDate         DateTime             @default(now())
  updateData         DateTime             @default(now())
  statusRol          Boolean              @default(true)
  account            Account[]
  roleHashPermission RoleHashPermission[]
}

model Permission {
  idPermission       Int                  @id @default(autoincrement())
  namePermission     String               @unique
  endPoint           String               @unique
  createDate         DateTime             @default(now())
  updateData         DateTime             @default(now())
  statusPermission   Boolean              @default(true)
  roleHashPermission RoleHashPermission[]
}

model RoleHashPermission {
  idRoleHashPermission     Int        @id @default(autoincrement())
  idRole                   Int
  idPermission             Int
  createDate               DateTime   @default(now())
  updateData               DateTime   @default(now())
  statusRoleHashPermission Boolean    @default(true)
  permission               Permission @relation(fields: [idPermission], references: [idPermission])
  role                     Role       @relation(fields: [idRole], references: [idRole])
}
